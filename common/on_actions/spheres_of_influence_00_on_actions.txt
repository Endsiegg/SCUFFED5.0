on_actions = {

	on_startup = {
	
		effect = {
		
			every_country = {
				set_variable = { THIS.influence_power = 0.00 }
				set_variable = { THIS.influence_power_daily_gain = 0.00 }
				
				set_variable = { var = THIS.AI_check_months value = 0 }
				set_variable = { var = THIS.AI_check_months_time value = 1 }
				set_variable = { var = THIS.AI_check_priority value = 0 }
				set_variable = { var = THIS.check_decision_days value = 0 }
			}
			
			#Only [value] countries per month will be able to start influence
			set_variable = { var = global.AI_request_per_month_limit value = 15 }
		}

	}
	
	on_civil_war_end = {

		effect = {
			
			if = {
				limit = {
					FROM = {
						has_country_flag = coup_via_outer
					}
				}
				FROM = {
					clr_country_flag = coup_via_outer
					clr_country_flag = coup_successful
				}
			}
			if = {
				limit = {
					ROOT = {
						has_country_flag = coup_via_outer
					}
				}
				ROOT = {
					clr_country_flag = coup_via_outer
					set_country_flag = coup_successful
				}
			}

		}

	}
	on_annex = {
	
		effect = {
		
			FROM = {
				if = {
					limit = {
						FROM = { has_country_flag = FROM.influence_tabbed_@ROOT }
					}
					clr_country_flag = FROM.influence_tabbed_@ROOT
					ROOT = { clr_country_flag = ROOT.influence_tab_open_flag }
				}
			}
			every_country = {
				if = {
					limit = {
						FROM = { has_country_flag = FROM.influence_tabbed_@THIS }
						has_country_flag = THIS.influence_tab_open_flag
					}
					FROM = { clr_country_flag = FROM.influence_tabbed_@THIS }
					THIS = { clr_country_flag = THIS.influence_tab_open_flag }
				}
				if = {
					limit = {
						FROM = { has_country_flag = under_influence_of_@THIS }
					}
					FROM = { clr_country_flag = FROM.under_influence_of_@THIS }
				}
			}
		
		}
	
	}

	on_daily = {
	
		effect = {
		
			#Proportional Influence Update (1.6.2)
			every_country = {
				if = {
					limit = {
						check_variable = { THIS.influence_level@ROOT > 0.5 }
					}
					
					# DO NOT CHANGE THOSE VARIABLE, ALL OF THEM ARE MATHEMATICALLY DEPENDEND ON EACH OTHER
					# and, well, caus changing something might break something else. I dont know, im not
					# testing it for the case when someone wants to change something xd
					
					ROOT = {
						set_variable = { ROOT.avg_influence_resist_1_@PREV = 6.0 } #60% from PREV avg_2 AVRG
						set_variable = { ROOT.avg_influence_resist_2_@PREV = 7.0 } #70% from PREV avg_2 AVRG
						
						set_variable = { ROOT.takeover_avg_@PREV = PREV.avg_influence_2_@ROOT }
						
						if = {
							limit = {
								has_game_rule = {
									rule = soi_proportional_influence_req
									option = SOI_ENABLED_REQ
								}
							}
							#LOW
							if = {
								limit = {
									has_game_rule = {
										rule = soi_ai_influence_resistance
										option = SOI_DO_RESIST_LOW
									}
								}
								set_variable = { ROOT.avg_influence_resist_1_@PREV = ROOT.takeover_avg_@PREV } #80% from PREV avg_2
								divide_variable = { ROOT.avg_influence_resist_1_@PREV = 100 }
								multiply_variable = { ROOT.avg_influence_resist_1_@PREV = 80 }
								
								set_variable = { ROOT.avg_influence_resist_2_@PREV = ROOT.takeover_avg_@PREV } #85% from PREV avg_2
								divide_variable = { ROOT.avg_influence_resist_2_@PREV = 100 }
								multiply_variable = { ROOT.avg_influence_resist_2_@PREV = 85 }
								
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_1_@PREV < 5.3 }
									}
									set_variable = { ROOT.avg_influence_resist_1_@PREV = 5.3 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_1_@PREV > 16.0 }
									}
									set_variable = { ROOT.avg_influence_resist_1_@PREV = 16.0 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_2_@PREV < 5.6 }
									}
									set_variable = { ROOT.avg_influence_resist_2_@PREV = 5.6 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_2_@PREV > 17.0 }
									}
									set_variable = { ROOT.avg_influence_resist_2_@PREV = 17.0 }
								}
							}
							#AVRG
							if = {
								limit = {
									has_game_rule = {
										rule = soi_ai_influence_resistance
										option = SOI_DO_RESIST_AVRG
									}
								}
								set_variable = { ROOT.avg_influence_resist_1_@PREV = ROOT.takeover_avg_@PREV } #60% from PREV avg_2
								divide_variable = { ROOT.avg_influence_resist_1_@PREV = 100 }
								multiply_variable = { ROOT.avg_influence_resist_1_@PREV = 60 }
								
								set_variable = { ROOT.avg_influence_resist_2_@PREV = ROOT.takeover_avg_@PREV } #70% from PREV avg_2
								divide_variable = { ROOT.avg_influence_resist_2_@PREV = 100 }
								multiply_variable = { ROOT.avg_influence_resist_2_@PREV = 70 }
								
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_1_@PREV < 4.0 }
									}
									set_variable = { ROOT.avg_influence_resist_1_@PREV = 4.0 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_1_@PREV > 12.0 }
									}
									set_variable = { ROOT.avg_influence_resist_1_@PREV = 12.0 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_2_@PREV < 4.6 }
									}
									set_variable = { ROOT.avg_influence_resist_2_@PREV = 4.6 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_2_@PREV > 14.0 }
									}
									set_variable = { ROOT.avg_influence_resist_2_@PREV = 14.0 }
								}
							}
							#HIGH
							if = {
								limit = {
									has_game_rule = {
										rule = soi_ai_influence_resistance
										option = SOI_DO_RESIST_HIGH
									}
								}
								set_variable = { ROOT.avg_influence_resist_1_@PREV = ROOT.takeover_avg_@PREV } #40% from PREV avg_2
								divide_variable = { ROOT.avg_influence_resist_1_@PREV = 100 }
								multiply_variable = { ROOT.avg_influence_resist_1_@PREV = 40 }
								
								set_variable = { ROOT.avg_influence_resist_2_@PREV = ROOT.takeover_avg_@PREV } #60% from PREV avg_2
								divide_variable = { ROOT.avg_influence_resist_2_@PREV = 100 }
								multiply_variable = { ROOT.avg_influence_resist_2_@PREV = 60 }
								
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_1_@PREV < 2.7 }
									}
									set_variable = { ROOT.avg_influence_resist_1_@PREV = 2.7 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_1_@PREV > 8.0 }
									}
									set_variable = { ROOT.avg_influence_resist_1_@PREV = 8.0 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_2_@PREV < 4.0 }
									}
									set_variable = { ROOT.avg_influence_resist_2_@PREV = 4.0 }
								}
								if = {
									limit = {
										check_variable = { ROOT.avg_influence_resist_2_@PREV > 12.0 }
									}
									set_variable = { ROOT.avg_influence_resist_2_@PREV = 12.0 }
								}
							}
						}
						
						#a = avg_2 / 100 * p
					}
					
				}
				if = {
					limit = {
						exists = yes
						has_country_flag = under_influence_of_@ROOT
					}
					
					ROOT = {
						set_variable = { ROOT.avg_influence_1_@PREV = 5.0 }
						set_variable = { ROOT.avg_influence_2_@PREV = 10.0 }
						set_variable = { ROOT.avg_influence_3_@PREV = 15.0 }
						
						set_variable = { ROOT.avg_influence_1_show_@PREV = 4.0 }
						set_variable = { ROOT.avg_influence_2_show_@PREV = 9.0 }
						set_variable = { ROOT.avg_influence_3_show_@PREV = 14.0 }
						
						# ---------- #
						
						if = {
							limit = {
								has_game_rule = {
									rule = soi_proportional_influence_req
									option = SOI_ENABLED_REQ
								}
							}
							set_variable = { ROOT.tempa = var:ROOT.owned_states }
							divide_variable = { ROOT.tempa = 100 }
							multiply_variable = { ROOT.tempa = 90 }
							
							set_variable = { ROOT.tempb = var:ROOT.owned_states }
							divide_variable = { ROOT.tempb = 100 }
							multiply_variable = { ROOT.tempb = 10 }
							add_to_variable = { ROOT.tempb = var:ROOT.owned_states }
							
							
							round_variable = ROOT.tempa
							round_variable = ROOT.tempb
							
							#log = "(MATH-ROUND) [?ROOT.tempa] [?ROOT.tempb]"
							
							if = {
								limit = {
									check_variable = { ROOT.tempa > var:PREV.owned_states }
								}
								#if going min
								
								set_variable = { ROOT.calc_temp_a = var:ROOT.owned_states }
								divide_variable = { ROOT.calc_temp_a = 100 }
								multiply_variable = { ROOT.calc_temp_a = 90 }
								
								#log = "(MATH-MIN) [?ROOT.calc_temp_a]"
								
								set_variable = { ROOT.calc_temp_b = var:PREV.owned_states }
								divide_variable = { ROOT.calc_temp_b = ROOT.calc_temp_a }
								multiply_variable = { ROOT.calc_temp_b = 100 }
								
								#log = "(MATH-MIN) [?ROOT.calc_temp_b]"
								
								set_variable = { ROOT.calc_temp_r1 = ROOT.avg_influence_1_@PREV }
								divide_variable = { ROOT.calc_temp_r1 = 100 }
								multiply_variable = { ROOT.calc_temp_r1 = ROOT.calc_temp_b }
								
								#log = "(MATH-MIN) [?ROOT.calc_temp_r1]"
								
								set_variable = { ROOT.calc_temp_r2 = ROOT.avg_influence_2_@PREV }
								divide_variable = { ROOT.calc_temp_r2 = 100 }
								multiply_variable = { ROOT.calc_temp_r2 = ROOT.calc_temp_b }
								
								#log = "(MATH-MIN) [?ROOT.calc_temp_r2]"
								
								set_variable = { ROOT.calc_temp_r3 = ROOT.avg_influence_3_@PREV }
								divide_variable = { ROOT.calc_temp_r3 = 100 }
								multiply_variable = { ROOT.calc_temp_r3 = ROOT.calc_temp_b }
								
								#log = "(MATH-MIN) [?ROOT.calc_temp_r3]"
								
								set_variable = { ROOT.avg_influence_1_@PREV = ROOT.calc_temp_r1 }
								set_variable = { ROOT.avg_influence_2_@PREV = ROOT.calc_temp_r2 }
								set_variable = { ROOT.avg_influence_3_@PREV = ROOT.calc_temp_r3 }
								
							}
							else_if = {
								limit = {
									check_variable = { ROOT.tempb < var:PREV.owned_states }
								}
								#if going max
								set_variable = { ROOT.calc_temp_a = var:ROOT.owned_states }
								divide_variable = { ROOT.calc_temp_a = 100 }
								multiply_variable = { ROOT.calc_temp_a = 10 }
								
								#log = "(MATH-MAX) 1 [?ROOT.calc_temp_a]"
								
								set_variable = { ROOT.calc_temp_b = var:ROOT.owned_states }
								add_to_variable = { ROOT.calc_temp_b = ROOT.calc_temp_a }
								
								#log = "(MATH-MAX) 2 [?ROOT.calc_temp_b]"
								
								set_variable = { ROOT.calc_temp_c = ROOT.calc_temp_b }
								divide_variable = { ROOT.calc_temp_c = var:PREV.owned_states }
								multiply_variable = { ROOT.calc_temp_c = 100 }
								
								#log = "(MATH-MAX) 3 [?ROOT.calc_temp_c]"
								
								set_variable = { ROOT.calc_temp_d = 100 }
								subtract_from_variable = { ROOT.calc_temp_d = ROOT.calc_temp_c }
								
								#log = "(MATH-MAX) 4 [?ROOT.calc_temp_d]"
								
								set_variable = { ROOT.calc_temp_r1 = ROOT.avg_influence_1_@PREV }
								divide_variable = { ROOT.calc_temp_r1 = 100 }
								multiply_variable = { ROOT.calc_temp_r1 = ROOT.calc_temp_d }
								
								#log = "(MATH-MAX) 5 [?ROOT.calc_temp_r1]"
								
								set_variable = { ROOT.calc_temp_r2 = ROOT.avg_influence_2_@PREV }
								divide_variable = { ROOT.calc_temp_r2 = 100 }
								multiply_variable = { ROOT.calc_temp_r2 = ROOT.calc_temp_d }
								
								#log = "(MATH-MAX) 6 [?ROOT.calc_temp_r2]"
								
								set_variable = { ROOT.calc_temp_r3 = ROOT.avg_influence_3_@PREV }
								divide_variable = { ROOT.calc_temp_r3 = 100 }
								multiply_variable = { ROOT.calc_temp_r3 = ROOT.calc_temp_d }
								
								#log = "(MATH-MAX) 7 [?ROOT.calc_temp_r3]"
								
								add_to_variable = { ROOT.avg_influence_1_@PREV = ROOT.calc_temp_r1 }
								add_to_variable = { ROOT.avg_influence_2_@PREV = ROOT.calc_temp_r2 }
								add_to_variable = { ROOT.avg_influence_3_@PREV = ROOT.calc_temp_r3 }
							}
							if = {
								limit = {
									check_variable = { ROOT.avg_influence_1_@PREV < 3.3 }
								}
								set_variable = { ROOT.avg_influence_1_@PREV = 3.3 }
							}
							if = {
								limit = {
									check_variable = { ROOT.avg_influence_1_@PREV > 10.0 }
								}
								set_variable = { ROOT.avg_influence_1_@PREV = 10.0 }
							}
							if = {
								limit = {
									check_variable = { ROOT.avg_influence_2_@PREV < 6.7 }
								}
								set_variable = { ROOT.avg_influence_2_@PREV = 6.7 }
							}
							if = {
								limit = {
									check_variable = { ROOT.avg_influence_2_@PREV > 20.0 }
								}
								set_variable = { ROOT.avg_influence_2_@PREV = 20.0 }
							}
							if = {
								limit = {
									check_variable = { ROOT.avg_influence_3_@PREV < 10.0 }
								}
								set_variable = { ROOT.avg_influence_3_@PREV = 10.0 }
							}
							if = {
								limit = {
									check_variable = { ROOT.avg_influence_3_@PREV > 30.0 }
								}
								set_variable = { ROOT.avg_influence_3_@PREV = 30.0 }
							}
							
							set_variable = { ROOT.avg_influence_1_show_@PREV = ROOT.avg_influence_1_@PREV }
							subtract_from_variable = { ROOT.avg_influence_1_show_@PREV = 1 }
							set_variable = { ROOT.avg_influence_2_show_@PREV = ROOT.avg_influence_2_@PREV }
							subtract_from_variable = { ROOT.avg_influence_2_show_@PREV = 1 }
							set_variable = { ROOT.avg_influence_3_show_@PREV = ROOT.avg_influence_3_@PREV }
							subtract_from_variable = { ROOT.avg_influence_3_show_@PREV = 1 }
							
							clear_variable = ROOT.tempa
							clear_variable = ROOT.tempb
							clear_variable = ROOT.calc_temp_a
							clear_variable = ROOT.calc_temp_b
							clear_variable = ROOT.calc_temp_c
							clear_variable = ROOT.calc_temp_d
							clear_variable = ROOT.calc_temp_r1
							clear_variable = ROOT.calc_temp_r2
							clear_variable = ROOT.calc_temp_r3
						}
					}
				}
			}
			#AI Improvement Update (v1.6.1)
			if = {
				limit = {
					has_game_rule = {
						rule = soi_ai_behaviour
						option = SOI_RANDOM_BEHAVIOUR
					}
					check_variable = { var:ROOT.ai_behaviour_var = 0 }
				}
				random_list = {
					20 = {
						set_variable = { var = ROOT.ai_behaviour_var value = 1 }
					}
					30 = {
						set_variable = { var = ROOT.ai_behaviour_var value = 2 }
					}
					20 = {
						set_variable = { var = ROOT.ai_behaviour_var value = 3 }
					}
					20 = {
						set_variable = { var = ROOT.ai_behaviour_var value = 4 }
					}
					10 = {
						set_variable = { var = ROOT.ai_behaviour_var value = 5 }
					}
				}
			}
			every_country = {
				if = {
					limit = {
						has_country_flag = under_influence_of_@ROOT
						is_in_faction = no
						is_puppet = no
						is_major = no
						exists = yes
						check_variable = { var = ROOT.check_decision_days@THIS value = -1 compare = not_equals }
					}
					add_to_variable = { var = ROOT.check_decision_days@THIS value = 1 }
				}
				if = {
					limit = {
						has_country_flag = under_influence_of_@ROOT
						OR = {
							is_in_faction = yes
							is_puppet = yes
							is_major = yes
							exists = no
						}
						check_variable = { var = ROOT.check_decision_days@THIS value = -1 compare = not_equals }
					}
					set_variable = { var = ROOT.check_decision_days@THIS value = -1 }
				}
			}
			every_country = {
				#Adding effects (v1.5.7)
				if = {
					limit = {
						check_variable = { ROOT.country_actions@THIS = 1 }
					}
					subtract_from_variable = { THIS.influence_level@ROOT = 0.075 }
				}
				if = {
					limit = {
						check_variable = { ROOT.country_actions@THIS = 2 }
					}
					subtract_from_variable = { THIS.influence_level@ROOT = 0.05 }
				}
				
				#adding influence by interventions
				#i am either really dumb, or i just need to sleep. (4.8.22 3:33pm)
				#Yea, i am definetly dumb. I cant understand how to work with has_attache_from has_volunteers_amount_from is_lend_leasing
				#second day im trying to write that thing holy crap (4.9.22 3:41pm)
				#yep, i am dumb (4.12.22 11:57am)
				if = {
					limit = {
						THIS = {
							has_attache_from = ROOT
							has_country_flag = under_influence_of_@ROOT
						}
					}
					add_to_variable = { ROOT.influence_level@THIS = 0.01 }
				}
				if = {
					limit = {
						THIS = {
							has_volunteers_amount_from = { tag = ROOT count > 0 }
							has_country_flag = under_influence_of_@ROOT
						}
					}
					add_to_variable = { ROOT.influence_level@THIS = 0.01 }
				}
				if = {
					limit = {
						THIS = {
							has_country_flag = under_influence_of_@ROOT
						}
						is_lend_leasing = THIS
					}
					add_to_variable = { ROOT.influence_level@THIS = 0.01 }
				}
				
				#setup new vars & conditions (v1.2)
				if = {
					limit = {
						check_variable = { var = ROOT.influence_level@THIS value = 0 compare = greater_than }
					}
					set_variable = { var = THIS.opinion_about_temp@ROOT value = THIS.opinion@ROOT }
					
					divide_variable = { var = THIS.opinion_about_temp@ROOT value = 2 }
					
					set_variable = { var = THIS.opinion_about@ROOT value = THIS.opinion_about_temp@ROOT }
					
					if = {
						limit = {
							check_variable = { var = THIS.opinion_about_temp@ROOT value = 1 compare = greater_than }
						}
						set_variable = { var = ROOT.influence_multiplier@THIS value = THIS.opinion_about_temp@ROOT }
						
						divide_variable = { var = ROOT.influence_multiplier@THIS value = 50 }
					}
					if = {
						limit = {
							check_variable = { var = THIS.opinion_about_temp@ROOT value = 1 compare = less_than_or_equals }
						}
						set_variable = { var = ROOT.influence_multiplier@THIS value = 1 }
					}
				}
				
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS < 0 }
						NOT = {
							THIS = {
								gives_military_access_to = ROOT
								has_country_flag = under_influence_of_@ROOT
							}
						}
					}
					set_variable = { ROOT.influence_level@THIS = 0 }
				}
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS < 0.2 }
						THIS = {
							gives_military_access_to = ROOT
							has_country_flag = under_influence_of_@ROOT
						}
					}
					set_variable = { ROOT.influence_level@THIS = 0.2 }
				}
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS > 10.19 }
						THIS = {
							NOT = {
								is_puppet_of = ROOT
							}
						}
					}
					set_variable = { ROOT.influence_level@THIS = 10.2 }
				}
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS > 15.19 }
						THIS = {
							is_puppet_of = ROOT
						}
					}
					set_variable = { ROOT.influence_level@THIS = 15.2 }
				}
			}
			
			set_variable = { ROOT.influence_power_daily_gain = political_power_daily }
			divide_variable = { ROOT.influence_power_daily_gain = 2 }
			add_to_variable = { ROOT.influence_power = ROOT.influence_power_daily_gain  }
			if = {
				limit = {
					check_variable = { ROOT.influence_power > 100.00 }
				}
				set_variable = { ROOT.influence_power = 100.00 }
			}
			
			clear_array = ROOT.all_countries
			every_country = {
				limit = {
					OR = {
						check_variable = {
							var = ROOT.influence_level@THIS
							value = 0
							compare = greater_than
						}
						check_variable = {
							var = THIS.influence_level@ROOT
							value = 0
							compare = greater_than
						}
					}
				}
				add_to_array = { ROOT.all_countries = THIS.id }
			}
			if = {
				limit = {
					has_country_flag = ROOT.resist_outside_influence
				}
				every_country = {
					add_to_variable = { THIS.influence_level@ROOT =  -0.02 }
				}
			}
			every_country = {
				limit = {
					has_country_flag = has_influence_campaign_@ROOT
				}
				if = {
					limit = {
						ROOT = { has_country_flag = ROOT.resisting_outside_influence_@THIS }
					}
					add_to_variable = { THIS.influence_level@ROOT =  -0.05 }
				}
				if = {
					limit = {
						ROOT = { has_country_flag = ROOT.resisting_banned_country_@THIS }
					}
					add_to_variable = { THIS.influence_level@ROOT =  -0.075 }
				}
			}
			
		}
	
	}
	
	on_weekly = {
	
		effect = {
		
			add_to_variable = { var = ROOT.AI_check_weeks_time value = 1 }
			
			every_country = {
				if = {
					limit = {
						check_variable = { var = ROOT.do_influence@THIS value = 0 compare = greater_than }
						NOT = { check_variable = { var = ROOT.do_influence@THIS value = 0 compare = less_than_or_equals } }
					}
					subtract_from_variable = { var = ROOT.do_influence@THIS value = 1 }
				}
			
			
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS > 0 }
						THIS = { NOT = { has_country_flag = SOI_conflicting_interests_target } }
					}
					add_to_variable = { ROOT.influence_level@THIS = -0.05 }
				}
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS > 0 }
						THIS = { has_country_flag = SOI_conflicting_interests_target }
					}
					add_to_variable = { ROOT.influence_level@THIS = -0.01 }
				}
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS < 0 }
					}
					set_variable = { ROOT.influence_level@THIS = 0 }
				}
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS > 10.2 }
						THIS = {
							NOT = {
								is_puppet_of = ROOT
							}
						}
					}
					set_variable = { ROOT.influence_level@THIS = 10.2 }
				}
				if = {
					limit = {
						check_variable = { ROOT.influence_level@THIS > 15.2 }
						THIS = {
							is_puppet_of = ROOT
						}
					}
					set_variable = { ROOT.influence_level@THIS = 15.2 }
				}
			
			}
		
		}
	
	}
	
	on_monthly = {
	
		effect = {
		
			#AI Improvement Update (v1.6.1)
			set_variable = { var = global.AI_request_sent value = 0 }
			clr_global_flag = SOI_AI_request_limit
			add_to_variable = { var = ROOT.AI_check_months_time value = 1 }
			if = {
				limit = {
					check_variable = { var = ROOT.AI_check_months value = 0 compare = greater_than }
				}
				subtract_from_variable = { var = ROOT.AI_check_months value = 1 }
			}
			if = {
				limit = {
					NOT = {
						has_game_rule = {
							rule = soi_ai_range
							option = SOI_DEFAULT_RANGE
						}
					}
				}
				##  ##  ######  ######  ######  ######  ####    ######  ######  ######  ##        ######  ######
				##  ##    ##    ##        ##    ##  ##  ##  ##    ##    ##      ##  ##  ##        ##  ##    ##
				######    ##    ######    ##    ##  ##  ####      ##    ##      ######  ##        ######    ##
				##  ##    ##        ##    ##    ##  ##  ##  ##    ##    ##      ##  ##  ##        ##  ##    ##
				##  ##  ######  ######    ##    ######  ##  ##  ######  ######  ##  ##  ######    ##  ##  ######
				if = {
					limit = {
						has_game_rule = {
							rule = soi_ai_behaviour
							option = SOI_HISTORICAL_BEHAVIOUR
						}
					}
					GER = {
						set_variable = { var = GER.do_influence@SWE value = 1000 }
						if = {
							limit = {
								check_variable = { var = GER.AI_check_months_time value = 12 compare = equals }
							}
							set_variable = { var = GER.do_influence@AUS value = 100 }
						}
						if = {
							limit = {
								check_variable = { var = GER.AI_check_months_time value = 24 compare = equals }
							}
							set_variable = { var = GER.do_influence@CZE value = 100 }
						}
						if = {
							limit = {
								check_variable = { var = GER.AI_check_months_time value = 36 compare = equals }
							}
							set_variable = { var = GER.do_influence@POL value = 100 }
						}
						if = {
							limit = {
								check_variable = { var = GER.AI_check_months_time value = 42 compare = equals }
							}
							set_variable = { var = GER.do_influence@DEN value = 100 }
							set_variable = { var = GER.do_influence@NOR value = 100 }
						}
						if = {
							limit = {
								check_variable = { var = GER.AI_check_months_time value = 48 compare = greater_than }
								check_variable = { var = GER.AI_check_months_time value = 72 compare = less_than }
							}
							set_variable = { var = GER.do_influence@FIN value = 100 }
						}
						else_if = {
							limit = {
								check_variable = { var = GER.AI_check_months_time value = 72 compare = equals }
							}
							set_variable = { var = GER.do_influence@FIN value = 0 }
						}
					}
					ITA = {
						if = {
							limit = {
								check_variable = { var = ITA.AI_check_months_time value = 18 compare = equals }
							}
							set_variable = { var = ITA.do_influence@ALB value = 100 }
						}
					}
					JAP = {
						if = {
							limit = {
								check_variable = { var = JAP.AI_check_months_time value = 36 compare = equals }
							}
							set_variable = { var = JAP.do_influence@SIA value = 100 }
						}
					}
					ENG = {
						if = {
							limit = {
								check_variable = { var = ENG.AI_check_months_time value = 84 compare = equals }
							}
							set_variable = { var = ENG.do_influence@TUR value = 100 }
						}
						if = {
							limit = {
								check_variable = { var = ENG.AI_check_months_time value = 36 compare = greater_than }
								check_variable = { var = ENG.AI_check_months_time value = 72 compare = less_than }
							}
							set_variable = { var = ENG.do_influence@POL value = 100 }
						}
						else_if = {
							limit = {
								check_variable = { var = ENG.AI_check_months_time value = 72 compare = greater_than_or_equals }
							}
							set_variable = { var = ENG.do_influence@POL value = 0 }
						}
					}
					SOV = {
						if = {
							limit = {
								has_global_flag = sov_yes_pact
							}
							set_variable = { var = SOV.do_influence@EST value = 100 }
							set_variable = { var = SOV.do_influence@LIT value = 100 }
							set_variable = { var = SOV.do_influence@LAT value = 100 }
						}
						if = {
							limit = {
								check_variable = { var = SOV.AI_check_months_time value = 48 compare = greater_than }
								check_variable = { var = SOV.AI_check_months_time value = 60 compare = less_than }
							}
							set_variable = { var = SOV.do_influence@FIN value = 100 }
						}
						else_if = {
							limit = {
								check_variable = { var = SOV.AI_check_months_time value = 60 compare = greater_than_or_equals }
							}
							set_variable = { var = SOV.do_influence@FIN value = 0 }
						}
					}
				}
			}
		}
	
	}
	
}